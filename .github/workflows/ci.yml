name: CI Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

  docker-build:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: Build Docker images
      run: |
        docker build -f flaskapp/Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/flaskapp:latest .
        docker build -f nginx/Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/nginx:latest .

    - name: Push Docker images
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/flaskapp:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/nginx:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up KUBECONFIG
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config
        chmod 600 ~/.kube/config

    - name: Deploy to Kubernetes using Helm
      run: |
        helm upgrade --install helmwebapp ./helmwebapp --namespace default

    - name: Wait for Deployment Rollout
      run: |
        echo "Waiting for deployment to complete..."
        kubectl rollout status deployment/helmwebapp --namespace default --timeout=10m || {
          echo "Deployment failed. Fetching additional information..."
          kubectl get pods --namespace default
          kubectl describe deployment helmwebapp --namespace default
          kubectl logs -l app=helmwebapp --namespace default
          exit 1
        }

    - name: Run integration tests
      run: |
        kubectl port-forward svc/helmwebapp 8080:80 &
        sleep 30
        pytest tests/test_flask_integration.py

    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2.1.1
      with:
        webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        message: "Deployment of helmwebapp on ${K8S_CLUSTER_NAME} completed successfully."

